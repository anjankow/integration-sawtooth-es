syntax = "proto3";
option go_package = "ledger_pb2";


enum Currency {
    // euro
    CURRENCY_EUR = 0;
    // zloty
    CURRENCY_PLN = 1;
    // peso chileno
    CURRENCY_CLP = 2;
}


// Message payloads used by this transaction family
message LedgerTransactionPayload {

    enum PayloadType {
        PAYLOAD_TYPE_UNSET = 0;
        CREATE_USER = 1;
        CREATE_WALLET = 2;
        CREATE_ACCOUNT = 3;
        MAKE_TRANSFER = 4;
    }

    // User's keys need to be used to sign this transaction.
    message CreateUserPayload {
        string username = 1;
    }

    // When wallet is created, if there is an existing user with the key
    // matching the signer of this transaction, wallet is linked.
    message CreateWalletPayload {
        // Wallet name
        string name = 1;
        // The key used by this wallet can be different from user's keys.
        string pub_key = 2;
    }

    // Account exists within the wallet only.
    // To create an account, the wallet's key needs to be used for signing.
    message CreateAccountPayload {
        // Account currency
        Currency currency = 1;
    }

    // Transfers money from signer to receiver.
    // To transfer, receiver needs to have an account in the given currency.
    message MakeTransferPayload {
        // Wallet address (public key) to which money is transferred.
        string receiver_address = 1;
        // Amount to be transferred, given in the smallest unit of a currency
        uint64 value = 2;
        // Currency
        Currency currency = 3;
    }

    PayloadType payload_type = 1;
    CreateUserPayload create_user = 2;
    CreateWalletPayload create_wallet = 3;
    LinkWalletPayload link_wallet = 4;
    CreateAccountPayload create_account = 5;
    MakeTransferPayload make_transfer = 6;

}


// User data stored on the blockchain
message User {
    string username = 1;
}

// Wallet data stored on the blockchain
message Wallet {
    string name = 1;
    string user_id = 2;
}

// Account data stored on the blockchain
message Account {
    Currency currency = 1;
    // Value given in the smallest currency unit
    uint64 value = 2;
}